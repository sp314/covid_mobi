ggsurvplot(KM_recid_mar,
legend.title="Marital Status",
title="Kaplan-Meier Curve for Recidivism by Marital Status",
legend.labs=c("Not Married", "Married"),
palette=c("black", "blue"),
xlab="Weeks",
ylim=c(0.7,1))
KM_recid_mar = survfit(formula = Surv(time = week, event = arrest) ~ as.factor(mar), data = Recidivism)
ggsurvplot(KM_recid_mar,
legend.title="Marital Status",
title="Kaplan-Meier Curve for Recidivism by Marital Status",
legend.labs=c("Not Married", "Married"),
palette=c("black", "blue"),
xlab="Weeks",
ylim=c(0.7,1))
3/14
3/7
(3 - 0)*1 + (6.5 - 3)*(9/10) + (10 - 6.5)*(9/14) + (12-10)*(3/7) + (15 - 12)*(3/14)
AML
9*3/14/4
4*14
27/112
library(survival)
library(survminer)
library(ggplot2)
Cord = read.csv(file = 'https://www.macalester.edu/~addona/Cord.csv') %>%
mutate(Status = Damaged == 0)
AML = read.csv(file = 'https://www.macalester.edu/~addona/AML.csv')
Recidivism = read.csv(file = 'https://www.macalester.edu/~addona/Recidivism.csv')
AUCKM = function(survobj,duration)
{
base=c(0,summary(survobj)$time,max(duration))
heights=c(1,summary(survobj)$surv)
new=c()
for(i in 1:length(heights)) { new=c(new,(base[i+1]-base[i])*heights[i]) }
c(sum(new))
}
(3 - 0)*1 + (6.5 - 3)*(9/10) + (10 - 6.5)*(9/14) + (12-10)*(27/56) + (15 - 12)*(27/112)
(3 - 0)*1 + (6.5 - 3)*(9/10) + (10 - 6.5)*(9/14) + (12-10)*(27/56) + (15 - 12)*(27/112)
(6.5 - 3)*(9/10) + (10 - 6.5)*(9/14) + (12-10)*(27/56) + (15 - 12)*(27/112)
(3 - 0)*1 + (6.5 - 3)*(9/10) + (10 - 6.5)*(9/14) + (12-10)*(27/56) + (15 - 12)*(27/112)
27/56
9/14 * 3/4
9/14
c(3,4,5.7,6.5,6.5,8.4,10,10,12,15)
t = c(3,4,5.7,6.5,6.5,8.4,10,10,12,15)
s = c(1,0,0,1,1,0,1,0,1,1)
df = data.frame(t, s)
df
km = survfit(formula = Surv(t, s) ~ 1, data = df)
plot(km)
plot(KM_recid, conf.int = FALSE, mark.time = FALSE)
plot(km, conf.int = FALSE, mark.time = FALSE
)
AUCKM(km, df$t)
setwd("~/Desktop/school/math453/Q1")
library(survival)
library(survminer)
library(ggplot2)
AppPopularity = read.csv(file = 'https://www.macalester.edu/~addona/AppPopularity.csv')
AppPopularity
AppPopularity %>% colnames()
AppPopularity$Status
AppPopClean <- AppPopularity %>% select(DaysSurvived, Status, NumLang)
AppPopClean
AppPopClean %>% filter(Status == 0)
x = c(7,12,16,5,9)
s = c(0,1,1,1,1)
df = data.frame(x, s)
survfit(Surv(x,s) ~ 1, data = df)
sf = survfit(Surv(x,s) ~ 1, data = df)
plot(sf, conf.int=FALSE , ylab="Survival Proporton" , xlab="Time", col='blue')
pweibull(q = 0.5, shape = 1/1.3 , scale = exp(6.2))
pweibull(q = 0.5, shape = 1/1.3 , scale = exp(6.2))
qweibull(q = 0.5, shape = 1/1.3 , scale = exp(6.2))
qweibull(q = 0.5, shape = 1/1.3 , scale = exp(6.2))
qweibull(p = 0.5, shape = 1/1.3 , scale = exp(6.2))
hnorm = function(x,mu,sigma) { dnorm(x,mu,sigma) / ( 1-pnorm(x,mu,sigma) ) }
68/184
68/178
2/98.5
10/78.5
LifeTable = function( time, status, breaks, finite )
{
failed = c(0,hist(time[status==1],breaks=breaks,plot=F)$counts)
censored = c(0,hist(time[status==0],breaks=breaks,plot=F)$counts)
alivestart = length(time)-cumsum(failed[-length(failed)])-cumsum(censored[-length(censored)])
atrisk = alivestart-c(censored[-1]/2)
failrate = failed[-1]/atrisk
survrate = 1-failrate
survest = c(1,cumprod(1-failrate)[1:(length(failrate))])
if (finite==0) return(list(Failed=failed[-1],Censored=censored[-1],AliveStart=alivestart,
AtRisk=atrisk[-length(atrisk)],FailRate=failrate[-length(failrate)],
SurvRate=survrate[-length(survrate)],SurvEst=survest[-length(survest)]))
if (finite==1) return(list(Failed=failed[-1],Censored=censored[-1],AliveStart=alivestart,
AtRisk=atrisk,FailRate=failrate,SurvRate=survrate,SurvEst=survest))
}
EsophCancer = read.csv(file = 'https://www.macalester.edu/~addona/EsophCancer.csv')
EsophCancer
EC_KM_censor = survfit(Surv(Survival, status) ~ 1 , data=EsophCancer)
EsophCancer = read.csv(file = 'https://www.macalester.edu/~addona/EsophCancer.csv') %>%
mutate(status = Censored == 0)
EC_KM_censor = survfit(Surv(Survival, status) ~ 1 , data=EsophCancer)
EC_KM_censor
summary(EC_KM_censor)
plot(HG_KM_censor,  ylab="Survival Proporton" , xlab="Time", col='blue')
plot(EC_KM_censor,  ylab="Survival Proporton" , xlab="Time", col='blue')
Welfare = read.csv(file = 'https://www.macalester.edu/~addona/Welfare.csv')
Welfare
Welfare
Welfare = read.csv(file = 'https://www.macalester.edu/~addona/Welfare.csv') %>%
mutate(status = Censored == 0)
Welfare_KM_censor = survfit(Surv(Spell, status) ~ 1 , data=Welfare)
plot(Welfare_KM_censor,  ylab="Survival Proporton" , xlab="Time", col='blue')
summary(Welfare_KM_censor)
Welfare = read.csv(file = 'https://www.macalester.edu/~addona/Welfare.csv') %>%
mutate(status = Censored == 0)
Welfare_KM_censor = survfit(Surv(Spell, status) ~ 1 , data=Welfare)
plot(Welfare_KM_censor,  ylab="Survival Proporton" , xlab="Time", col='blue')
Welfare = read.csv(file = 'https://www.macalester.edu/~addona/Welfare.csv') %>%
mutate(status = Censored == 1)
Welfare_KM_censor = survfit(Surv(Spell, status) ~ 1 , data=Welfare)
plot(Welfare_KM_censor,  ylab="Survival Proporton" , xlab="Time", col='blue')
Welfare = read.csv(file = 'https://www.macalester.edu/~addona/Welfare.csv') %>%
mutate(status = Censored == 0)
Welfare_KM_censor = survfit(Surv(Spell, status) ~ 1 , data=Welfare)
plot(Welfare_KM_censor,  ylab="Survival Proporton" , xlab="Time", col='blue')
Welfare_KM_ethn = survfit(Surv(Spell, status) ~ Ethnicity , data=Welfare)
plot(Welfare_KM_ethn,  ylab="Survival Proporton" , xlab="Time", col='blue')
plot(Welfare_KM_ethn,  ylab="Survival Proporton" , xlab="Time")
plot(Welfare_KM_ethn,  ylab="Survival Proporton" , xlab="Time", col=c("black", "red", "blue", "green", "pink"))
summary(Welfare_KM_ethn)
setwd("~/Desktop/school/math453/L2")
library(survival)
library(survminer)
library(ggplot2)
library(dplyr)
Burns = read.csv(file = 'https://www.macalester.edu/~addona/Burns.csv')
Burns
library(survival)
library(survminer)
library(ggplot2)
library(dplyr)
Burns = read.csv(file = 'https://www.macalester.edu/~addona/Burns.csv')
LifeTable = function( time, status, breaks, finite )
{
failed = c(0,hist(time[status==1],breaks=breaks,plot=F)$counts)
censored = c(0,hist(time[status==0],breaks=breaks,plot=F)$counts)
alivestart = length(time)-cumsum(failed[-length(failed)])-cumsum(censored[-length(censored)])
atrisk = alivestart-c(censored[-1]/2)
failrate = failed[-1]/atrisk
survrate = 1-failrate
survest = c(1,cumprod(1-failrate)[1:(length(failrate))])
if (finite==0) return(list(Failed=failed[-1],Censored=censored[-1],AliveStart=alivestart,
AtRisk=atrisk[-length(atrisk)],FailRate=failrate[-length(failrate)],
SurvRate=survrate[-length(survrate)],SurvEst=survest[-length(survest)]))
if (finite==1) return(list(Failed=failed[-1],Censored=censored[-1],AliveStart=alivestart,
AtRisk=atrisk,FailRate=failrate,SurvRate=survrate,SurvEst=survest))
}
b = c(0, 10, 20, 30, 40, 50, 60, 70, 80, max(Burns$Time))
l = LifeTable(time = Burns$Time, status = Burns$Status, breaks = b, finite = 0)
library(survival)
library(survminer)
library(ggplot2)
library(dplyr)
Burns = read.csv(file = 'https://www.macalester.edu/~addona/Burns.csv')
LifeTable = function( time, status, breaks, finite )
{
failed = c(0,hist(time[status==1],breaks=breaks,plot=F)$counts)
censored = c(0,hist(time[status==0],breaks=breaks,plot=F)$counts)
alivestart = length(time)-cumsum(failed[-length(failed)])-cumsum(censored[-length(censored)])
atrisk = alivestart-c(censored[-1]/2)
failrate = failed[-1]/atrisk
survrate = 1-failrate
survest = c(1,cumprod(1-failrate)[1:(length(failrate))])
if (finite==0) return(list(Failed=failed[-1],Censored=censored[-1],AliveStart=alivestart,
AtRisk=atrisk[-length(atrisk)],FailRate=failrate[-length(failrate)],
SurvRate=survrate[-length(survrate)],SurvEst=survest[-length(survest)]))
if (finite==1) return(list(Failed=failed[-1],Censored=censored[-1],AliveStart=alivestart,
AtRisk=atrisk,FailRate=failrate,SurvRate=survrate,SurvEst=survest))
}
b = c(0, 10, 20, 30, 40, 50, 60, 70, 80, max(Burns$Time))
l = LifeTable(time = Burns$Time, status = Burns$Status, breaks = b, finite = 0)
step = stepfun( c(10,20,30,40,50,60,70,80) , l$SurvEst )
plot(step, do.points=FALSE, ylab="Survival", xlab="Days", main="", ylim=c(0.4,1))
lines( c(0,10,20,30,40,50,60,70,80) , l$SurvEst , col="red" )
Burns$Time
b = c(0, 10, 20, 30, 40, 50, 60, 70, 80, max(Burns$Time))
l = LifeTable(time = Burns$Time, status = Burns$Status, breaks = b, finite = 0)
burntime_KM = survfit(formula = Surv(Time, Status) ~ 1, data = Burns)
step = stepfun( c(10,20,30,40,50,60,70,80) , l$SurvEst )
plot(step, do.points=FALSE, ylab="Survival", xlab="Days", main="", ylim=c(0.4,1))
lines( c(0,10,20,30,40,50,60,70,80) , l$SurvEst , col="red" )
lines(burntime_KM, conf.int = FALSE, mark.time = FALSE, col = "blue", add = TRUE)
step = stepfun( c(10,20,30,40,50,60,70,80) , l$SurvEst )
plot(step, do.points=FALSE, ylab="Survival", xlab="Days", main="", ylim=c(0.4,1))
lines( c(0,10,20,30,40,50,60,70,80) , l$SurvEst , col="red" )
max(Burns$Time)
l
l_hazardest = l$FailRate/10
HazardEst = l$FailRate/10
hazstep = stepfun( c(0,10,20,30,40,50,60,70,80) , c(0,HazardEst,0) )
plot( hazstep , do.points=FALSE , ylab="h(k)" , xlab="k" , main="" )
DensityEst = HazardEst*l$SurvEst[1:8]
denstep = stepfun( c(0,10,20,30,40,50,60,70,80) , c(0,DensityEst,0) )
plot( denstep , do.points=FALSE , ylab="f(k)" , xlab="k" , main="" )
DensityEst = HazardEst*l$SurvEst[1:8]
denstep = stepfun( c(0,10,20,30,40,50,60,70,80) , c(0,DensityEst,0) )
plot( denstep , do.points=FALSE , ylab="f(k)" , xlab="k" , main="" )
HazardEst = l$FailRate/10
hazstep = stepfun( c(0,10,20,30,40,50,60,70,80) , c(0,HazardEst,0) )
plot( hazstep , do.points=FALSE , ylab="h(k)" , xlab="k" , main="" )
DensityEst = HazardEst*l$SurvEst[1:8]
denstep = stepfun( c(0,10,20,30,40,50,60,70,80) , c(0,DensityEst,0) )
plot( denstep , do.points=FALSE , ylab="f(k)" , xlab="k" , main="" )
HazardEst
burntime_weibull = survreg( Surv(Time,Status) ~ 1, dist='weibull', data=Burns )
burntime_weibull = survreg(Surv(Time,Status) ~ 1, dist='weibull', data=Burns)
shape = 1/burntime_weibull$scale
scale = exp(as.numeric(burntime_weibull$coefficients))
hweibull = function(x,shape,scale) { dweibull(x,shape=shape,scale=scale)/(1-pweibull(x,shape=shape,scale=scale)) }
DensityEst = HazardEst*l$SurvEst[1:8]
denstep = stepfun( c(0,10,20,30,40,50,60,70,80) , c(0,DensityEst,0) )
plot( denstep , do.points=FALSE , ylab="f(k)" , xlab="k" , main="" )
curve( hweibull(x,shape=shape,scale=scale), add=TRUE, col='red' )
burntime_weibull = survreg(Surv(Time,Status) ~ 1, dist='weibull', data=Burns)
shape = 1/burntime_weibull$scale
scale = exp(as.numeric(burntime_weibull$coefficients))
hweibull = function(x,shape,scale) { dweibull(x,shape=shape,scale=scale)/(1-pweibull(x,shape=shape,scale=scale)) }
plot( hazstep , do.points=FALSE , ylab="h(k)" , xlab="k" , main="" )
curve( hweibull(x,shape=shape,scale=scale), add=TRUE, col='red' )
l$SurvEst[1:8]
DensityEst = HazardEst*l$SurvEst[1:8]
denstep = stepfun( c(0,10,20,30,40,50,60,70,80) , c(0,DensityEst,0) )
plot( denstep , do.points=FALSE , ylab="f(k)" , xlab="k" , main="" )
summary(burntime_KM)
b = c(0, 10, 20, 30, 40, 50, 60, 70, 80, max(Burns$Time))
l = LifeTable(time = Burns$Time, status = Burns$Status, breaks = b, finite = 0)
burntime_KM = survfit(formula = Surv(Time, Status) ~ 1, data = Burns)
step = stepfun( c(10,20,30,40,50,60,70,80) , l$SurvEst )
plot(step, do.points=FALSE, ylab="Survival", xlab="Days", main="", ylim=c(0.4,1))
lines( c(0,10,20,30,40,50,60,70,80) , l$SurvEst , col="red" )
lines(burntime_KM, conf.int = FALSE, mark.time = FALSE, col = "blue", add = TRUE)
step = stepfun( c(10,20,30,40,50,60,70,80) , l$SurvEst )
plot(step, do.points=FALSE, ylab="Survival", xlab="Days", main="", ylim=c(0.4,1))
lines( c(0,10,20,30,40,50,60,70,80) , l$SurvEst , col="red" )
lines(burntime_KM, mark.time = FALSE, col = "blue", add = TRUE)
b = c(0, 10, 20, 30, 40, 50, 60, 70, 80, max(Burns$Time))
l = LifeTable(time = Burns$Time, status = Burns$Status, breaks = b, finite = 0)
burntime_KM = survfit(formula = Surv(Time, Status) ~ 1, data = Burns)
step = stepfun( c(10,20,30,40,50,60,70,80) , l$SurvEst )
plot(step, do.points=FALSE, ylab="Survival", xlab="Days", main="", ylim=c(0.4,1))
lines( c(0,10,20,30,40,50,60,70,80) , l$SurvEst , col="red" )
lines(burntime_KM, conf.int = FALSE, mark.time = FALSE, col = "blue", add = TRUE)
KMTrt = survfit( Surv( Time , Status ) ~ Treatment , data=Burns )
plot( KMTrt , mark.time=FALSE , conf.int=TRUE , lty=1:2 )
KMTrt = survfit( Surv( Time , Status ) ~ Treatment , data=Burns )
plot( KMTrt , mark.time=FALSE , lty=1:2 )
KMTrt = survfit( Surv( Time , Status ) ~ Treatment , data=Burns )
plot( KMTrt , mark.time=FALSE , col=1:2)
KMTrt = survfit( Surv( Time , Status ) ~ Treatment , data=Burns )
plot( KMTrt , mark.time=FALSE , conf.int=TRUE, col=1:2)
KMTrt = survfit( Surv( Time , Status ) ~ Treatment , data=Burns )
plot( KMTrt , mark.time=FALSE , conf.int=TRUE, col=1:2)
summary(KMTrt)
c(0.560, 0.756) - c(0.643, 0.852)
c(0.643, 0.852) - c(0.560, 0.756)
l$FailRate
c(1.000, 0.811, 0.717, 0.652, 0.579, 0.519, 0.461, 0.417, 0.371, 0.334, 0.299, 0.256, 0.214, 0.184, 0.164, 0.143)
l
1.0000000*(1-0.20270270)
(1-0.11702128)*0.7972973
SurvEst = c(1.000, 0.811, 0.717, 0.652, 0.579, 0.519, 0.461, 0.417, 0.371, 0.334, 0.299, 0.256, 0.214, 0.184, 0.164, 0.143)
SurvEst[[1]]
SurvEst[[2]]
SurvEst[[2:]]
SurvEst[2:
]
SurvEst[-1]
FailRate = SurvEst[,-1]
SurvEst[-length(SurvEst)]
FailRate = 1 - SurvEst[-1]/SurvEst[-length(SurvEst)]
FailRate
l$FailRate
1- l$SurvEst[-1]/l$SurvEst[-length(l$SurvEst)]
SurvEst = c(1.000, 0.811, 0.717, 0.652, 0.579, 0.519, 0.461, 0.417, 0.371, 0.334, 0.299, 0.256, 0.214, 0.184, 0.164, 0.143)
FailRate = 1 - SurvEst[-1]/SurvEst[-length(SurvEst)] #Equal to hazards (len 1 intervals)
step = stepfun( c(1,2,3,4,5,6,7,8,9,10,11,12,13,14) , SurvEst )
c(1:14)
length(SurvEst)
l$SurvEst
length(l$SurvEst)
length(c(10,20,30,40,50,60,70,80))
SurvEst = c(1.000, 0.811, 0.717, 0.652, 0.579, 0.519, 0.461, 0.417, 0.371, 0.334, 0.299, 0.256, 0.214, 0.184, 0.164, 0.143)
FailRate = 1 - SurvEst[-1]/SurvEst[-length(SurvEst)] #Equal to hazards (len 1 intervals)
step = stepfun( c(1:15) , SurvEst )
plot(step, do.points=FALSE, ylab="Survival", xlab="Years", main="", ylim=c(0.4,1))
lines( c(1:15) , SurvEst , col="red" )
SurvEst = c(1.000, 0.811, 0.717, 0.652, 0.579, 0.519, 0.461, 0.417, 0.371, 0.334, 0.299, 0.256, 0.214, 0.184, 0.164, 0.143)
FailRate = 1 - SurvEst[-1]/SurvEst[-length(SurvEst)] #Equal to hazards (len 1 intervals)
step = stepfun( c(1:15) , SurvEst )
plot(step, do.points=FALSE, ylab="Survival", xlab="Years", main="", ylim=c(0.4,1))
lines( c(0:15) , SurvEst , col="red" )
SurvEst = c(1.000, 0.811, 0.717, 0.652, 0.579, 0.519, 0.461, 0.417, 0.371, 0.334, 0.299, 0.256, 0.214, 0.184, 0.164, 0.143)
FailRate = 1 - SurvEst[-1]/SurvEst[-length(SurvEst)] #Equal to hazards (len 1 intervals)
hazstep = stepfun( c(0:15) , c(0,FailRate,0) )
plot( hazstep , do.points=FALSE , ylab="h(k)" , xlab="k" , main="Angina Pectoris Hazard Function" )
c(40:80, 5)
c(40:80:5)
seq(from = 40, to = 80, by = 5)
c(1571)*3
rep(0, 3)
rep(1571, 7)
cumsum(chd_time)
library(survival)
library(survminer)
library(ggplot2)
library(dplyr)
chd_time = c(17, 36, 62, 76, 50, 9, 0)
cumsum(chd_time)
cumsum(chd_time + censored)
censored = c(29, 60, 83, 441, 439, 262, 7)
censored = c(29, 60, 83, 441, 439, 262, 7)
cumsum(chd_time + censored)
alivestart = rep(1571, 7) - cumsum(chd_time + censored)
alivestart
alivestart = c(0, rep(1571, 7) - cumsum(chd_time + censored))
alivestart
k = seq(from = 45, to = 80, by = 5)
chd_time = c(0, 17, 36, 62, 76, 50, 9, 0)
censored = c(0, 29, 60, 83, 441, 439, 262, 7)
alivestart = c(rep(1571, 7) - cumsum(chd_time[-1] + censored[-1]))
alivestart
k = seq(from = 45, to = 80, by = 5)
chd_time = c(0, 17, 36, 62, 76, 50, 9, 0)
censored = c(0, 29, 60, 83, 441, 439, 262, 7)
alivestart = c(rep(1571, 7) - cumsum(chd_time[-1] + censored[-1]))
alias()
alivestart
cumsum(chd_time[-1] + censored[-1])
k = seq(from = 45, to = 80, by = 5)
chd_time = c(0, 17, 36, 62, 76, 50, 9, 0)
censored = c(0, 29, 60, 83, 441, 439, 262, 7)
alivestart = c(rep(1571, 7) - cumsum(chd_time + censored))
k = seq(from = 45, to = 80, by = 5)
chd_time = c(17, 36, 62, 76, 50, 9, 0)
censored = c(29, 60, 83, 441, 439, 262, 7)
alivestart = c(1571, rep(1571, 7) - cumsum(chd_time + censored))
alias()
alivestart
alivestart = c(1571, rep(1571, 7) - cumsum(chd_time + censored))[-1]
alivestart
alivestart = c(1571, rep(1571, 7) - cumsum(chd_time + censored))[-length(alivestart)]
alivestart
alivestart = c(1571, rep(1571, 7) - cumsum(chd_time + censored))[-length(alivestart)]
k = seq(from = 45, to = 80, by = 5)
chd_time = c(17, 36, 62, 76, 50, 9, 0)
censored = c(29, 60, 83, 441, 439, 262, 7)
alivestart = c(1571, rep(1571, 7) - cumsum(chd_time + censored))[-(length(chd_time) + 1)]
alivestart
length(k)
l
length(chd_time)
length(alivestart)
atrisk = alivestart-c(censored[-1]/2)
c(censored[-1]/2)
k = seq(from = 45, to = 80, by = 5)
chd_time = c(0, 17, 36, 62, 76, 50, 9, 0)
censored = c(0, 29, 60, 83, 441, 439, 262, 7)
alivestart = c(1571, rep(1571, 7) - cumsum(chd_time[-1] + censored[-1]))[-(length(chd_time) + 1)]
atrisk = alivestart-c(censored[-1]/2)
alivestart = c(1571, rep(1571, 7) - cumsum(chd_time[-1] + censored[-1]))[-(length(chd_time) + 1)]
alivestart = c(rep(1571, 8) - cumsum(chd_time + censored))
alivestart
alivestart = c(rep(1571, 8) - cumsum(chd_time + censored))[-(length(chd_time) + 1)]
alivestart
alivestart = c(rep(1571, 8) - cumsum(chd_time + censored))[-length(chd_time)]
alivestart
atrisk = alivestart-c(censored[-1]/2)
atrisk
failrate = chd_time[-1]/atrisk
failrate
survrate = 1-failrate
survest = c(1,cumprod(1-failrate)[1:(length(failrate))])
survest
survest[-length(survest)]
survest
survrate
survest = c(1,cumprod(1-failrate)[1:(length(failrate))])[-length(survest)]
survest
step = stepfun(k , survest)
survest = c(1,cumprod(1-failrate)[1:(length(failrate))])
surv_adjustedcurves()
survest
step = stepfun(k , survest)
k = seq(from = 45, to = 80, by = 5)
chd_time = c(0, 17, 36, 62, 76, 50, 9, 0)
censored = c(0, 29, 60, 83, 441, 439, 262, 7)
alivestart = c(rep(1571, 8) - cumsum(chd_time + censored))[-length(chd_time)]
atrisk = alivestart-c(censored[-1]/2)
failrate = chd_time[-1]/atrisk
survrate = 1-failrate
survest = c(1,cumprod(1-failrate)[1:(length(failrate))])
step = stepfun(k , survest)
length(survest)
length(k)
k
k = seq(from = 45, to = 75, by = 5)
chd_time = c(0, 17, 36, 62, 76, 50, 9, 0)
censored = c(0, 29, 60, 83, 441, 439, 262, 7)
alivestart = c(rep(1571, 8) - cumsum(chd_time + censored))[-length(chd_time)]
atrisk = alivestart-c(censored[-1]/2)
failrate = chd_time[-1]/atrisk
survrate = 1-failrate
survest = c(1,cumprod(1-failrate)[1:(length(failrate))])
step = stepfun(x = k , y = survest)
plot(step, do.points=FALSE, ylab="Survival Proportion", xlab="Years", main="CHD Survival Curve")
lines( c(0, k) , survest , col="red" )
Cell = read.csv(file = 'https://www.macalester.edu/~addona/Cell.csv')
Cell
Cell
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
cell_KM
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE)
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE, main="Cell Failure Time")
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE, main="Cell Failure Time")
abline(v = 1095, col="purple", lty = 2)
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE, main="Cell Failure Time")
abline(v = 1035, col="purple", lty = 2)
abline(v = 1095, col="purple", lty = 2)
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE, main="Cell Failure Time")
abline(v = 1035, col="purple", lty = 2)
abline(v = 1095, col="purple", lty = 2)
abline(v = 1169, col="purple", lty = 2)
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE, main="Cell Failure Time")
abline(h = 0.5, col="purple", lty = 2)
abline(h = 0.5, col="purple", lty = 2)
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE, main="Cell Failure Time")
abline(h = 0.5, col="purple", lty = 2)
abline(v = 1006, col="purple", lty = 2)
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE, main="Cell Failure Time")
abline(h = 0.5, col="purple", lty = 2)
abline(v = 1006, col="purple", lty = 2)
abline(v = 797, col="purple", lty = 2)
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE, main="Cell Failure Time")
abline(h = 0.5, col="purple", lty = 2)
abline(v = 1006, col="purple", lty = 2)
abline(v = 797, col="purple", lty = 2)
abline(v = 1415, col="purple", lty = 2)
cell_KM = survfit(formula = Surv(Time) ~ 1, data = Cell)
summary(cell_KM)
plot(cell_KM, conf.int=TRUE, main="Cell Failure Time")
cell_weib = survreg(formula = Surv(Time) ~ 1, data = Cell, model = "weibull")
cell_weib = survreg(formula = Surv(Time) ~ 1, data = Cell,dist = "weibull")
cell_weib = survreg(formula = Surv(Time) ~ 1, data = Cell,dist = "weibull")
shape = 1/cell_weib$scale
scale = exp(as.numeric(cell_weib$coefficients))
cell_weib = survreg(formula = Surv(Time) ~ 1, data = Cell,dist = "weibull")
shape = 1/cell_weib$scale
scale = exp(as.numeric(cell_weib$coefficients))
hweibull = function(x,shape,scale) { dweibull(x,shape=shape,scale=scale)/(1-pweibull(x,shape=shape,scale=scale)) }
plot(hweibull(x,shape=shape,scale=scale), add=TRUE, col='red')
cell_weib = survreg(formula = Surv(Time) ~ 1, data = Cell,dist = "weibull")
shape = 1/cell_weib$scale
scale = exp(as.numeric(cell_weib$coefficients))
hweibull = function(x,shape,scale) { dweibull(x,shape=shape,scale=scale)/(1-pweibull(x,shape=shape,scale=scale)) }
plot(hweibull(x,shape=shape,scale=scale), col='red')
cell_weib = survreg(formula = Surv(Time) ~ 1, data = Cell,dist = "weibull")
shape = 1/cell_weib$scale
scale = exp(as.numeric(cell_weib$coefficients))
hweibull = function(x,shape,scale) { dweibull(x,shape=shape,scale=scale)/(1-pweibull(x,shape=shape,scale=scale)) }
curve(hweibull(x,shape=shape,scale=scale), col='red')
cell_weib
cell_weib = survreg(formula = Surv(Time) ~ 1, data = Cell, dist = "weibull")
shape = 1/cell_weib$scale
scale = exp(as.numeric(cell_weib$coefficients))
hweibull = function(x,shape,scale) { dweibull(x,shape=shape,scale=scale)/(1-pweibull(x,shape=shape,scale=scale)) }
curve(hweibull(x,shape=shape,scale=scale), col='red')
Cell$Time
cell_weib = survreg(formula = Surv(Time) ~ 1, data = Cell, dist = "weibull")
shape = 1/cell_weib$scale
scale = exp(as.numeric(cell_weib$coefficients))
hweibull = function(x,shape,scale) { dweibull(x,shape=shape,scale=scale)/(1-pweibull(x,shape=shape,scale=scale)) }
curve(hweibull(x,shape=shape,scale=scale), col='red', xlim = c(min(Cell$Time), max(Cell$Time)))
cell_weib
setwd("~/Desktop/school/math453/covid_mobility")
library(tidyverse)
library(tidyverse)
yellow_jan <- read_csv(file = "yellow_tripdata_2020-01.csv")
library(tidyverse)
yellow_jan <- read_csv(file = "yellow_tripdata_2020-01.csv", n_max = 1000)
yellow_jan
yellow_jan$store_and_fwd_flag
